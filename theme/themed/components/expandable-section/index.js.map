{"version":3,"file":"index.js","sourceRoot":"lib/default/","sources":["expandable-section/index.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AACxE,OAAO,yBAA6D,MAAM,YAAY,CAAC;AACvF,OAAO,gBAAgB,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,sBAAsB,EAAE,MAAM,mDAAmD,CAAC;AAC3F,OAAO,EAAE,gBAAgB,EAAE,MAAM,wCAAwC,CAAC;AAI1E,MAAM,CAAC,OAAO,UAAU,iBAAiB,CAAC,EAAyD;QAAzD,EAAE,OAAO,GAAG,SAAS,OAAoC,EAA/B,KAAK,cAA/B,WAAiC,CAAF;IACvE,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;IAEjE,IAAI,OAAO,KAAK,WAAW,IAAI,OAAO,KAAK,SAAS,EAAE;QACpD,OAAO,CACL,oBAAC,sBAAsB;YACrB,oBAAC,kCAAkC,kBAAC,OAAO,EAAE,OAAO,IAAM,KAAK,EAAM,kBAAkB,EAAI,CACpE,CAC1B,CAAC;KACH;SAAM;QACL,OAAO,oBAAC,yBAAyB,kBAAC,OAAO,EAAE,OAAO,IAAM,KAAK,EAAM,kBAAkB,EAAI,CAAC;KAC3F;AACH,CAAC;AAED,SAAS,kCAAkC,CAAC,KAAqC;IAC/E,MAAM,EAAE,UAAU,EAAE,kBAAkB,EAAE,GAAG,gBAAgB,EAAE,CAAC;IAE9D,OAAO,oBAAC,yBAAyB,oBAAK,KAAK,IAAE,YAAY,EAAE,UAAU,EAAE,oBAAoB,EAAE,kBAAkB,IAAI,CAAC;AACtH,CAAC;AAED,gBAAgB,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { ExpandableSectionProps } from './interfaces';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalExpandableSection, { InternalExpandableSectionProps } from './internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { AnalyticsFunnelSubStep } from '../internal/analytics/components/analytics-funnel';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\n\nexport { ExpandableSectionProps };\n\nexport default function ExpandableSection({ variant = 'default', ...props }: ExpandableSectionProps) {\n  const baseComponentProps = useBaseComponent('ExpandableSection');\n\n  if (variant === 'container' || variant === 'stacked') {\n    return (\n      <AnalyticsFunnelSubStep>\n        <InternalExpandableSectionAsSubstep variant={variant} {...props} {...baseComponentProps} />\n      </AnalyticsFunnelSubStep>\n    );\n  } else {\n    return <InternalExpandableSection variant={variant} {...props} {...baseComponentProps} />;\n  }\n}\n\nfunction InternalExpandableSectionAsSubstep(props: InternalExpandableSectionProps) {\n  const { subStepRef, funnelSubStepProps } = useFunnelSubStep();\n\n  return <InternalExpandableSection {...props} __subStepRef={subStepRef} __funnelSubStepProps={funnelSubStepProps} />;\n}\n\napplyDisplayName(ExpandableSection, 'ExpandableSection');\n"]}